04-09 20:51:20 jdbc[4]: exception
org.h2.jdbc.JdbcSQLException: Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-187]
04-10 19:43:45 jdbc[133]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "'' (TEAM: USERID BIGINT)"; SQL statement:
INSERT INTO "PUBLIC"."TEAM"("TEAM_ID","USERID","TEAM_NAME","TEAM_SCORE")VALUES(?,?,?,?) -- (?1, ?2, ?3, ?4) [22018-187]
04-10 19:43:45 jdbc[133]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "'' (TEAM: USERID BIGINT)"; SQL statement:
INSERT INTO "PUBLIC"."TEAM"("TEAM_ID","USERID","TEAM_NAME","TEAM_SCORE")VALUES(?,?,?,?) -- (?1, ?2, ?3, ?4) [22018-187]
04-10 20:32:18 jdbc[133]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "'' (PLAYER: ATT_VAL INTEGER)"; SQL statement:
UPDATE "PUBLIC"."PLAYER" SET "PLAYER_ID"=? ,"JERSEY_NUM"=? ,"PLAYER_NAME"=? ,"POSITION_ID"=? ,"ATT_VAL"=? ,"DEF_VAL"=? ,"MID_FVAL"=? ,"GK_VAL"=? ,"HEALTH"=? ,"TEAM_ID_TEAM_ID"=? ,"INJURY"=? ,"SALARY"=? ,"TRANSFER_VALUE"=?  WHERE "PLAYER_ID"=? [22018-187]
04-10 20:32:18 jdbc[133]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "'' (PLAYER: ATT_VAL INTEGER)"; SQL statement:
UPDATE "PUBLIC"."PLAYER" SET "PLAYER_ID"=? ,"JERSEY_NUM"=? ,"PLAYER_NAME"=? ,"POSITION_ID"=? ,"ATT_VAL"=? ,"DEF_VAL"=? ,"MID_FVAL"=? ,"GK_VAL"=? ,"HEALTH"=? ,"TEAM_ID_TEAM_ID"=? ,"INJURY"=? ,"SALARY"=? ,"TRANSFER_VALUE"=?  WHERE "PLAYER_ID"=? [22018-187]
04-10 22:19:36 jdbc[814]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "'' (PLAYER: PLAYER_ID BIGINT NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."PLAYER"("PLAYER_ID","JERSEY_NUM","PLAYER_NAME","POSITION_ID","ATT_VAL","DEF_VAL","MID_FVAL","GK_VAL","HEALTH","TEAM_ID_TEAM_ID","INJURY","SALARY","TRANSFER_VALUE")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-187]
04-10 22:19:36 jdbc[814]: exception
org.h2.jdbc.JdbcSQLException: Data conversion error converting "'' (PLAYER: PLAYER_ID BIGINT NOT NULL)"; SQL statement:
INSERT INTO "PUBLIC"."PLAYER"("PLAYER_ID","JERSEY_NUM","PLAYER_NAME","POSITION_ID","ATT_VAL","DEF_VAL","MID_FVAL","GK_VAL","HEALTH","TEAM_ID_TEAM_ID","INJURY","SALARY","TRANSFER_VALUE")VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?) -- (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12, ?13) [22018-187]
04-11 13:33:25 jdbc[305]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-187]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:174)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:119)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:92)
	at org.h2.Driver.connect(Driver.java:72)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:92)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:98)
	at com.zaxxer.hikari.pool.BaseHikariPool.addConnection(BaseHikariPool.java:438)
	at com.zaxxer.hikari.pool.BaseHikariPool.initializeConnections(BaseHikariPool.java:540)
	at com.zaxxer.hikari.pool.BaseHikariPool.<init>(BaseHikariPool.java:171)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:60)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:48)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:80)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:58)
	at play.api.db.HikariCPConnectionPool$$anonfun$1.apply(HikariCPModule.scala:54)
	at scala.util.Try$.apply(Try.scala:191)
	at play.api.db.HikariCPConnectionPool.create(HikariCPModule.scala:54)
	at play.api.db.PooledDatabase.createDataSource(Databases.scala:199)
	at play.api.db.DefaultDatabase.dataSource$lzycompute(Databases.scala:124)
	at play.api.db.DefaultDatabase.dataSource(Databases.scala:122)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:143)
	at play.api.db.DefaultDatabase.getConnection(Databases.scala:139)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:44)
	at play.api.db.DefaultDBApi$$anonfun$connect$1.apply(DefaultDBApi.scala:42)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at play.api.db.DefaultDBApi.connect(DefaultDBApi.scala:42)
	at play.api.db.DBApiProvider.get$lzycompute(DBModule.scala:72)
	at play.api.db.DBApiProvider.get(DBModule.scala:62)
	at play.api.db.DBApiProvider.get(DBModule.scala:58)
	at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)
	at com.google.inject.internal.BoundProviderFactory.provision(BoundProviderFactory.java:72)
	at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)
	at com.google.inject.internal.BoundProviderFactory.get(BoundProviderFactory.java:62)
	at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:62)
	at com.google.inject.internal.InjectorImpl.injectMembers(InjectorImpl.java:984)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies.initialize(Providers.java:149)
	at com.google.inject.util.Providers$GuicifiedProviderWithDependencies$$FastClassByGuice$$2a7177aa.invoke(<generated>)
	at com.google.inject.internal.cglib.reflect.$FastMethod.invoke(FastMethod.java:53)
	at com.google.inject.internal.SingleMethodInjector$1.invoke(SingleMethodInjector.java:57)
	at com.google.inject.internal.SingleMethodInjector.inject(SingleMethodInjector.java:91)
	at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:93)
	at com.google.inject.internal.MembersInjectorImpl$1.call(MembersInjectorImpl.java:80)
	at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)
	at com.google.inject.internal.MembersInjectorImpl.injectAndNotify(MembersInjectorImpl.java:80)
	at com.google.inject.internal.Initializer$InjectableReference.get(Initializer.java:174)
	at com.google.inject.internal.Initializer.injectAll(Initializer.java:108)
	at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:174)
	at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)
	at com.google.inject.Guice.createInjector(Guice.java:96)
	at com.google.inject.Guice.createInjector(Guice.java:73)
	at com.google.inject.Guice.createInjector(Guice.java:62)
	at play.api.inject.guice.GuiceBuilder.injector(GuiceInjectorBuilder.scala:126)
	at play.api.inject.guice.GuiceApplicationBuilder.build(GuiceApplicationBuilder.scala:93)
	at play.api.inject.guice.GuiceApplicationLoader.load(GuiceApplicationLoader.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:153)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(DevServerStart.scala:150)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:21)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:150)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1$$anonfun$1.apply(DevServerStart.scala:121)
	at scala.Option.map(Option.scala:146)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:121)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1$$anonfun$apply$1.apply(DevServerStart.scala:119)
	at scala.util.Success.flatMap(Try.scala:230)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:119)
	at play.core.server.DevServerStart$$anonfun$mainDev$1$$anon$1$$anonfun$get$1.apply(DevServerStart.scala:111)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)
	at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:40)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:397)
	at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-187]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 82 more
